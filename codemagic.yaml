 Pricing

Flutter workflow editor

Knowledge base

Codemagic API

Troubleshooting

Build machine specs

Notes

CodemagicCodemagic Blog

Using codemagic.yaml

Configure all your workflows in a single file

codemagic.yaml is a highly customizable configuration file for setting up your CI/CD pipeline with Codemagic. Configure all your workflows in a single file and commit the file to version control.

Building with YAML

In order to use codemagic.yaml for build configuration on Codemagic, it has to be committed to your repository. The name of the file must be codemagic.yaml and it must be located in the root directory of the repository.

When detected in repository, codemagic.yaml is automatically used for configuring builds that are triggered in response to the events defined in the file, provided that a webhook is set up.

Builds can be also started manually by clicking Start new build in Codemagic and selecting the branch and workflow to build in the Specify build configuration popup.

Syntax

You can readily commit codemagic.yaml with the following content to test it out:

workflows: hello-world: name: Hello world workflow scripts: - echo "Hello World!" 

The scripts in the scripts section will be run right after the repository is cloned.

codemagic.yaml follows the traditional YAML syntax. Here are a few tips and tricks on how to better structure the file.

Use the Codemagic JSON schema to validate codemagic.yaml in your IDE, see how to set it up here.

Section names

For easier reading of the configuration file and build logs, you can divide the scripts into meaningful sections with descriptive names.

scripts: - name: Build for iOS # Name of the section script: flutter build ios # The script(s) to be run in that section 

Reusing sections

If a particular section would be reused multiple times in the file, e.g. in each workflow, you can avoid repetitions by using anchors. This is also convenient when you need to make changes to the code as you would have to edit it in just one place.

Define the section to be reused by adding & in front of it.

scripts: - &increment_build_number # Defined section name: Increment build number script: agvtool new-version -all $(($PROJECT_BUILD_NUMBER +1)) 

Reuse the defined section elsewhere by adding a * in front of it.

scripts: - script1 - *increment_build_number # Reused section - script3 

Template

This is the skeleton structure of codemagic.yaml. Each section along with the configuration options is described in more detail below.

workflows: my-workflow: name: My workflow name instance_type: mac_mini max_build_duration: 60 environment: vars: PUBLIC_ENV_VAR: "value here" flutter: stable xcode: latest cache: cache_paths: - ~/.pub-cache triggering: events: - push branch_patterns: - pattern: '*' include: true source: true cancel_previous_builds: false scripts: - ... artifacts: - build/**/outputs/bundle/**/*.aab publishing: email: recipients: - name@example.com scripts: - echo 'Post-publish script'

